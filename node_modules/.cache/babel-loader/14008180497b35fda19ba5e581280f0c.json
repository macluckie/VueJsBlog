{"remainingRequest":"/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/node_modules/babel-loader/lib/index.js!/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/node_modules/eslint-loader/index.js??ref--13-0!/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/src/assets/js/jqBootstrapValidation.js","dependencies":[{"path":"/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/src/assets/js/jqBootstrapValidation.js","mtime":1568668481000},{"path":"/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.array.map\";\n\n/* jqBootstrapValidation\n * A plugin for automating validation on Twitter Bootstrap formatted forms.\n *\n * v1.3.6\n *\n * License: MIT <http://opensource.org/licenses/mit-license.php> - see LICENSE file\n *\n * http://ReactiveRaven.github.com/jqBootstrapValidation/\n */\n(function ($) {\n  var createdElements = [];\n  var defaults = {\n    options: {\n      prependExistingHelpBlock: false,\n      sniffHtml: true,\n      // sniff for 'required', 'maxlength', etc\n      preventSubmit: true,\n      // stop the form submit event from firing if validation fails\n      submitError: false,\n      // function called if there is an error when trying to submit\n      submitSuccess: false,\n      // function called just before a successful submit event is sent to the server\n      semanticallyStrict: false,\n      // set to true to tidy up generated HTML output\n      autoAdd: {\n        helpBlocks: true\n      },\n      filter: function filter() {\n        // return $(this).is(\":visible\"); // only validate elements you can see\n        return true; // validate everything\n      }\n    },\n    methods: {\n      init: function init(options) {\n        var settings = $.extend(true, {}, defaults);\n        settings.options = $.extend(true, settings.options, options);\n        var $siblingElements = this;\n        var uniqueForms = $.unique($siblingElements.map(function () {\n          return $(this).parents(\"form\")[0];\n        }).toArray());\n        $(uniqueForms).bind(\"submit\", function (e) {\n          var $form = $(this);\n          var warningsFound = 0;\n          var $inputs = $form.find(\"input,textarea,select\").not(\"[type=submit],[type=image]\").filter(settings.options.filter);\n          $inputs.trigger(\"submit.validation\").trigger(\"validationLostFocus.validation\");\n          $inputs.each(function (i, el) {\n            var $this = $(el),\n                $controlGroup = $this.parents(\".form-group\").first();\n\n            if ($controlGroup.hasClass(\"warning\")) {\n              $controlGroup.removeClass(\"warning\").addClass(\"error\");\n              warningsFound++;\n            }\n          });\n          $inputs.trigger(\"validationLostFocus.validation\");\n\n          if (warningsFound) {\n            if (settings.options.preventSubmit) {\n              e.preventDefault();\n            }\n\n            $form.addClass(\"error\");\n\n            if ($.isFunction(settings.options.submitError)) {\n              settings.options.submitError($form, e, $inputs.jqBootstrapValidation(\"collectErrors\", true));\n            }\n          } else {\n            $form.removeClass(\"error\");\n\n            if ($.isFunction(settings.options.submitSuccess)) {\n              settings.options.submitSuccess($form, e);\n            }\n          }\n        });\n        return this.each(function () {\n          // Get references to everything we're interested in\n          var $this = $(this),\n              $controlGroup = $this.parents(\".form-group\").first(),\n              $helpBlock = $controlGroup.find(\".help-block\").first(),\n              $form = $this.parents(\"form\").first(),\n              validatorNames = []; // create message container if not exists\n\n          if (!$helpBlock.length && settings.options.autoAdd && settings.options.autoAdd.helpBlocks) {\n            $helpBlock = $('<div class=\"help-block\" />');\n            $controlGroup.find('.controls').append($helpBlock);\n            createdElements.push($helpBlock[0]);\n          } // =============================================================\n          //                                     SNIFF HTML FOR VALIDATORS\n          // =============================================================\n          // *snort sniff snuffle*\n\n\n          if (settings.options.sniffHtml) {\n            var message = \"\"; // ---------------------------------------------------------\n            //                                                   PATTERN\n            // ---------------------------------------------------------\n\n            if ($this.attr(\"pattern\") !== undefined) {\n              message = \"Not in the expected format<!-- data-validation-pattern-message to override -->\";\n\n              if ($this.data(\"validationPatternMessage\")) {\n                message = $this.data(\"validationPatternMessage\");\n              }\n\n              $this.data(\"validationPatternMessage\", message);\n              $this.data(\"validationPatternRegex\", $this.attr(\"pattern\"));\n            } // ---------------------------------------------------------\n            //                                                       MAX\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"max\") !== undefined || $this.attr(\"aria-valuemax\") !== undefined) {\n              var max = $this.attr(\"max\") !== undefined ? $this.attr(\"max\") : $this.attr(\"aria-valuemax\");\n              message = \"Too high: Maximum of '\" + max + \"'<!-- data-validation-max-message to override -->\";\n\n              if ($this.data(\"validationMaxMessage\")) {\n                message = $this.data(\"validationMaxMessage\");\n              }\n\n              $this.data(\"validationMaxMessage\", message);\n              $this.data(\"validationMaxMax\", max);\n            } // ---------------------------------------------------------\n            //                                                       MIN\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"min\") !== undefined || $this.attr(\"aria-valuemin\") !== undefined) {\n              var min = $this.attr(\"min\") !== undefined ? $this.attr(\"min\") : $this.attr(\"aria-valuemin\");\n              message = \"Too low: Minimum of '\" + min + \"'<!-- data-validation-min-message to override -->\";\n\n              if ($this.data(\"validationMinMessage\")) {\n                message = $this.data(\"validationMinMessage\");\n              }\n\n              $this.data(\"validationMinMessage\", message);\n              $this.data(\"validationMinMin\", min);\n            } // ---------------------------------------------------------\n            //                                                 MAXLENGTH\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"maxlength\") !== undefined) {\n              message = \"Too long: Maximum of '\" + $this.attr(\"maxlength\") + \"' characters<!-- data-validation-maxlength-message to override -->\";\n\n              if ($this.data(\"validationMaxlengthMessage\")) {\n                message = $this.data(\"validationMaxlengthMessage\");\n              }\n\n              $this.data(\"validationMaxlengthMessage\", message);\n              $this.data(\"validationMaxlengthMaxlength\", $this.attr(\"maxlength\"));\n            } // ---------------------------------------------------------\n            //                                                 MINLENGTH\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"minlength\") !== undefined) {\n              message = \"Too short: Minimum of '\" + $this.attr(\"minlength\") + \"' characters<!-- data-validation-minlength-message to override -->\";\n\n              if ($this.data(\"validationMinlengthMessage\")) {\n                message = $this.data(\"validationMinlengthMessage\");\n              }\n\n              $this.data(\"validationMinlengthMessage\", message);\n              $this.data(\"validationMinlengthMinlength\", $this.attr(\"minlength\"));\n            } // ---------------------------------------------------------\n            //                                                  REQUIRED\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"required\") !== undefined || $this.attr(\"aria-required\") !== undefined) {\n              message = settings.builtInValidators.required.message;\n\n              if ($this.data(\"validationRequiredMessage\")) {\n                message = $this.data(\"validationRequiredMessage\");\n              }\n\n              $this.data(\"validationRequiredMessage\", message);\n            } // ---------------------------------------------------------\n            //                                                    NUMBER\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"type\") !== undefined && $this.attr(\"type\").toLowerCase() === \"number\") {\n              message = settings.builtInValidators.number.message;\n\n              if ($this.data(\"validationNumberMessage\")) {\n                message = $this.data(\"validationNumberMessage\");\n              }\n\n              $this.data(\"validationNumberMessage\", message);\n            } // ---------------------------------------------------------\n            //                                                     EMAIL\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"type\") !== undefined && $this.attr(\"type\").toLowerCase() === \"email\") {\n              message = \"Not a valid email address<!-- data-validator-validemail-message to override -->\";\n\n              if ($this.data(\"validationValidemailMessage\")) {\n                message = $this.data(\"validationValidemailMessage\");\n              } else if ($this.data(\"validationEmailMessage\")) {\n                message = $this.data(\"validationEmailMessage\");\n              }\n\n              $this.data(\"validationValidemailMessage\", message);\n            } // ---------------------------------------------------------\n            //                                                MINCHECKED\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"minchecked\") !== undefined) {\n              message = \"Not enough options checked; Minimum of '\" + $this.attr(\"minchecked\") + \"' required<!-- data-validation-minchecked-message to override -->\";\n\n              if ($this.data(\"validationMincheckedMessage\")) {\n                message = $this.data(\"validationMincheckedMessage\");\n              }\n\n              $this.data(\"validationMincheckedMessage\", message);\n              $this.data(\"validationMincheckedMinchecked\", $this.attr(\"minchecked\"));\n            } // ---------------------------------------------------------\n            //                                                MAXCHECKED\n            // ---------------------------------------------------------\n\n\n            if ($this.attr(\"maxchecked\") !== undefined) {\n              message = \"Too many options checked; Maximum of '\" + $this.attr(\"maxchecked\") + \"' required<!-- data-validation-maxchecked-message to override -->\";\n\n              if ($this.data(\"validationMaxcheckedMessage\")) {\n                message = $this.data(\"validationMaxcheckedMessage\");\n              }\n\n              $this.data(\"validationMaxcheckedMessage\", message);\n              $this.data(\"validationMaxcheckedMaxchecked\", $this.attr(\"maxchecked\"));\n            }\n          } // =============================================================\n          //                                       COLLECT VALIDATOR NAMES\n          // =============================================================\n          // Get named validators\n\n\n          if ($this.data(\"validation\") !== undefined) {\n            validatorNames = $this.data(\"validation\").split(\",\");\n          } // Get extra ones defined on the element's data attributes\n\n\n          $.each($this.data(), function (i, el) {\n            var parts = i.replace(/([A-Z])/g, \",$1\").split(\",\");\n\n            if (parts[0] === \"validation\" && parts[1]) {\n              validatorNames.push(parts[1]);\n            }\n          }); // =============================================================\n          //                                     NORMALISE VALIDATOR NAMES\n          // =============================================================\n\n          var validatorNamesToInspect = validatorNames;\n          var newValidatorNamesToInspect = [];\n\n          do // repeatedly expand 'shortcut' validators into their real validators\n          {\n            // Uppercase only the first letter of each name\n            $.each(validatorNames, function (i, el) {\n              validatorNames[i] = formatValidatorName(el);\n            }); // Remove duplicate validator names\n\n            validatorNames = $.unique(validatorNames); // Pull out the new validator names from each shortcut\n\n            newValidatorNamesToInspect = [];\n            $.each(validatorNamesToInspect, function (i, el) {\n              if ($this.data(\"validation\" + el + \"Shortcut\") !== undefined) {\n                // Are these custom validators?\n                // Pull them out!\n                $.each($this.data(\"validation\" + el + \"Shortcut\").split(\",\"), function (i2, el2) {\n                  newValidatorNamesToInspect.push(el2);\n                });\n              } else if (settings.builtInValidators[el.toLowerCase()]) {\n                // Is this a recognised built-in?\n                // Pull it out!\n                var validator = settings.builtInValidators[el.toLowerCase()];\n\n                if (validator.type.toLowerCase() === \"shortcut\") {\n                  $.each(validator.shortcut.split(\",\"), function (i, el) {\n                    el = formatValidatorName(el);\n                    newValidatorNamesToInspect.push(el);\n                    validatorNames.push(el);\n                  });\n                }\n              }\n            });\n            validatorNamesToInspect = newValidatorNamesToInspect;\n          } while (validatorNamesToInspect.length > 0); // =============================================================\n          //                                       SET UP VALIDATOR ARRAYS\n          // =============================================================\n\n\n          var validators = {};\n          $.each(validatorNames, function (i, el) {\n            // Set up the 'override' message\n            var message = $this.data(\"validation\" + el + \"Message\");\n            var hasOverrideMessage = message !== undefined;\n            var foundValidator = false;\n            message = message ? message : \"'\" + el + \"' validation failed <!-- Add attribute 'data-validation-\" + el.toLowerCase() + \"-message' to input to change this message -->\";\n            $.each(settings.validatorTypes, function (validatorType, validatorTemplate) {\n              if (validators[validatorType] === undefined) {\n                validators[validatorType] = [];\n              }\n\n              if (!foundValidator && $this.data(\"validation\" + el + formatValidatorName(validatorTemplate.name)) !== undefined) {\n                validators[validatorType].push($.extend(true, {\n                  name: formatValidatorName(validatorTemplate.name),\n                  message: message\n                }, validatorTemplate.init($this, el)));\n                foundValidator = true;\n              }\n            });\n\n            if (!foundValidator && settings.builtInValidators[el.toLowerCase()]) {\n              var validator = $.extend(true, {}, settings.builtInValidators[el.toLowerCase()]);\n\n              if (hasOverrideMessage) {\n                validator.message = message;\n              }\n\n              var validatorType = validator.type.toLowerCase();\n\n              if (validatorType === \"shortcut\") {\n                foundValidator = true;\n              } else {\n                $.each(settings.validatorTypes, function (validatorTemplateType, validatorTemplate) {\n                  if (validators[validatorTemplateType] === undefined) {\n                    validators[validatorTemplateType] = [];\n                  }\n\n                  if (!foundValidator && validatorType === validatorTemplateType.toLowerCase()) {\n                    $this.data(\"validation\" + el + formatValidatorName(validatorTemplate.name), validator[validatorTemplate.name.toLowerCase()]);\n                    validators[validatorType].push($.extend(validator, validatorTemplate.init($this, el)));\n                    foundValidator = true;\n                  }\n                });\n              }\n            }\n\n            if (!foundValidator) {\n              $.error(\"Cannot find validation info for '\" + el + \"'\");\n            }\n          }); // =============================================================\n          //                                         STORE FALLBACK VALUES\n          // =============================================================\n\n          $helpBlock.data(\"original-contents\", $helpBlock.data(\"original-contents\") ? $helpBlock.data(\"original-contents\") : $helpBlock.html());\n          $helpBlock.data(\"original-role\", $helpBlock.data(\"original-role\") ? $helpBlock.data(\"original-role\") : $helpBlock.attr(\"role\"));\n          $controlGroup.data(\"original-classes\", $controlGroup.data(\"original-clases\") ? $controlGroup.data(\"original-classes\") : $controlGroup.attr(\"class\"));\n          $this.data(\"original-aria-invalid\", $this.data(\"original-aria-invalid\") ? $this.data(\"original-aria-invalid\") : $this.attr(\"aria-invalid\")); // =============================================================\n          //                                                    VALIDATION\n          // =============================================================\n\n          $this.bind(\"validation.validation\", function (event, params) {\n            var value = getValue($this); // Get a list of the errors to apply\n\n            var errorsFound = [];\n            $.each(validators, function (validatorType, validatorTypeArray) {\n              if (value || value.length || params && params.includeEmpty || !!settings.validatorTypes[validatorType].blockSubmit && params && !!params.submitting) {\n                $.each(validatorTypeArray, function (i, validator) {\n                  if (settings.validatorTypes[validatorType].validate($this, value, validator)) {\n                    errorsFound.push(validator.message);\n                  }\n                });\n              }\n            });\n            return errorsFound;\n          });\n          $this.bind(\"getValidators.validation\", function () {\n            return validators;\n          }); // =============================================================\n          //                                             WATCH FOR CHANGES\n          // =============================================================\n\n          $this.bind(\"submit.validation\", function () {\n            return $this.triggerHandler(\"change.validation\", {\n              submitting: true\n            });\n          });\n          $this.bind([\"keyup\", \"focus\", \"blur\", \"click\", \"keydown\", \"keypress\", \"change\"].join(\".validation \") + \".validation\", function (e, params) {\n            var value = getValue($this);\n            var errorsFound = [];\n            $controlGroup.find(\"input,textarea,select\").each(function (i, el) {\n              var oldCount = errorsFound.length;\n              $.each($(el).triggerHandler(\"validation.validation\", params), function (j, message) {\n                errorsFound.push(message);\n              });\n\n              if (errorsFound.length > oldCount) {\n                $(el).attr(\"aria-invalid\", \"true\");\n              } else {\n                var original = $this.data(\"original-aria-invalid\");\n                $(el).attr(\"aria-invalid\", original !== undefined ? original : false);\n              }\n            });\n            $form.find(\"input,select,textarea\").not($this).not(\"[name=\\\"\" + $this.attr(\"name\") + \"\\\"]\").trigger(\"validationLostFocus.validation\");\n            errorsFound = $.unique(errorsFound.sort()); // Were there any errors?\n\n            if (errorsFound.length) {\n              // Better flag it up as a warning.\n              $controlGroup.removeClass(\"success error\").addClass(\"warning\"); // How many errors did we find?\n\n              if (settings.options.semanticallyStrict && errorsFound.length === 1) {\n                // Only one? Being strict? Just output it.\n                $helpBlock.html(errorsFound[0] + (settings.options.prependExistingHelpBlock ? $helpBlock.data(\"original-contents\") : \"\"));\n              } else {\n                // Multiple? Being sloppy? Glue them together into an UL.\n                $helpBlock.html(\"<ul role=\\\"alert\\\"><li>\" + errorsFound.join(\"</li><li>\") + \"</li></ul>\" + (settings.options.prependExistingHelpBlock ? $helpBlock.data(\"original-contents\") : \"\"));\n              }\n            } else {\n              $controlGroup.removeClass(\"warning error success\");\n\n              if (value.length > 0) {\n                $controlGroup.addClass(\"success\");\n              }\n\n              $helpBlock.html($helpBlock.data(\"original-contents\"));\n            }\n\n            if (e.type === \"blur\") {\n              $controlGroup.removeClass(\"success\");\n            }\n          });\n          $this.bind(\"validationLostFocus.validation\", function () {\n            $controlGroup.removeClass(\"success\");\n          });\n        });\n      },\n      destroy: function destroy() {\n        return this.each(function () {\n          var $this = $(this),\n              $controlGroup = $this.parents(\".form-group\").first(),\n              $helpBlock = $controlGroup.find(\".help-block\").first(); // remove our events\n\n          $this.unbind('.validation'); // events are namespaced.\n          // reset help text\n\n          $helpBlock.html($helpBlock.data(\"original-contents\")); // reset classes\n\n          $controlGroup.attr(\"class\", $controlGroup.data(\"original-classes\")); // reset aria\n\n          $this.attr(\"aria-invalid\", $this.data(\"original-aria-invalid\")); // reset role\n\n          $helpBlock.attr(\"role\", $this.data(\"original-role\")); // remove all elements we created\n\n          if (createdElements.indexOf($helpBlock[0]) > -1) {\n            $helpBlock.remove();\n          }\n        });\n      },\n      collectErrors: function collectErrors(includeEmpty) {\n        var errorMessages = {};\n        this.each(function (i, el) {\n          var $el = $(el);\n          var name = $el.attr(\"name\");\n          var errors = $el.triggerHandler(\"validation.validation\", {\n            includeEmpty: true\n          });\n          errorMessages[name] = $.extend(true, errors, errorMessages[name]);\n        });\n        $.each(errorMessages, function (i, el) {\n          if (el.length === 0) {\n            delete errorMessages[i];\n          }\n        });\n        return errorMessages;\n      },\n      hasErrors: function hasErrors() {\n        var errorMessages = [];\n        this.each(function (i, el) {\n          errorMessages = errorMessages.concat($(el).triggerHandler(\"getValidators.validation\") ? $(el).triggerHandler(\"validation.validation\", {\n            submitting: true\n          }) : []);\n        });\n        return errorMessages.length > 0;\n      },\n      override: function override(newDefaults) {\n        defaults = $.extend(true, defaults, newDefaults);\n      }\n    },\n    validatorTypes: {\n      callback: {\n        name: \"callback\",\n        init: function init($this, name) {\n          return {\n            validatorName: name,\n            callback: $this.data(\"validation\" + name + \"Callback\"),\n            lastValue: $this.val(),\n            lastValid: true,\n            lastFinished: true\n          };\n        },\n        validate: function validate($this, value, validator) {\n          if (validator.lastValue === value && validator.lastFinished) {\n            return !validator.lastValid;\n          }\n\n          if (validator.lastFinished === true) {\n            validator.lastValue = value;\n            validator.lastValid = true;\n            validator.lastFinished = false;\n            var rrjqbvValidator = validator;\n            var rrjqbvThis = $this;\n            executeFunctionByName(validator.callback, window, $this, value, function (data) {\n              if (rrjqbvValidator.lastValue === data.value) {\n                rrjqbvValidator.lastValid = data.valid;\n\n                if (data.message) {\n                  rrjqbvValidator.message = data.message;\n                }\n\n                rrjqbvValidator.lastFinished = true;\n                rrjqbvThis.data(\"validation\" + rrjqbvValidator.validatorName + \"Message\", rrjqbvValidator.message); // Timeout is set to avoid problems with the events being considered 'already fired'\n\n                setTimeout(function () {\n                  rrjqbvThis.trigger(\"change.validation\");\n                }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst\n              }\n            });\n          }\n\n          return false;\n        }\n      },\n      ajax: {\n        name: \"ajax\",\n        init: function init($this, name) {\n          return {\n            validatorName: name,\n            url: $this.data(\"validation\" + name + \"Ajax\"),\n            lastValue: $this.val(),\n            lastValid: true,\n            lastFinished: true\n          };\n        },\n        validate: function validate($this, value, validator) {\n          if (\"\" + validator.lastValue === \"\" + value && validator.lastFinished === true) {\n            return validator.lastValid === false;\n          }\n\n          if (validator.lastFinished === true) {\n            validator.lastValue = value;\n            validator.lastValid = true;\n            validator.lastFinished = false;\n            $.ajax({\n              url: validator.url,\n              data: \"value=\" + value + \"&field=\" + $this.attr(\"name\"),\n              dataType: \"json\",\n              success: function success(data) {\n                if (\"\" + validator.lastValue === \"\" + data.value) {\n                  validator.lastValid = !!data.valid;\n\n                  if (data.message) {\n                    validator.message = data.message;\n                  }\n\n                  validator.lastFinished = true;\n                  $this.data(\"validation\" + validator.validatorName + \"Message\", validator.message); // Timeout is set to avoid problems with the events being considered 'already fired'\n\n                  setTimeout(function () {\n                    $this.trigger(\"change.validation\");\n                  }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst\n                }\n              },\n              failure: function failure() {\n                validator.lastValid = true;\n                validator.message = \"ajax call failed\";\n                validator.lastFinished = true;\n                $this.data(\"validation\" + validator.validatorName + \"Message\", validator.message); // Timeout is set to avoid problems with the events being considered 'already fired'\n\n                setTimeout(function () {\n                  $this.trigger(\"change.validation\");\n                }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst\n              }\n            });\n          }\n\n          return false;\n        }\n      },\n      regex: {\n        name: \"regex\",\n        init: function init($this, name) {\n          return {\n            regex: regexFromString($this.data(\"validation\" + name + \"Regex\"))\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return !validator.regex.test(value) && !validator.negative || validator.regex.test(value) && validator.negative;\n        }\n      },\n      required: {\n        name: \"required\",\n        init: function init($this, name) {\n          return {};\n        },\n        validate: function validate($this, value, validator) {\n          return !!(value.length === 0 && !validator.negative) || !!(value.length > 0 && validator.negative);\n        },\n        blockSubmit: true\n      },\n      match: {\n        name: \"match\",\n        init: function init($this, name) {\n          var element = $this.parents(\"form\").first().find(\"[name=\\\"\" + $this.data(\"validation\" + name + \"Match\") + \"\\\"]\").first();\n          element.bind(\"validation.validation\", function () {\n            $this.trigger(\"change.validation\", {\n              submitting: true\n            });\n          });\n          return {\n            \"element\": element\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return value !== validator.element.val() && !validator.negative || value === validator.element.val() && validator.negative;\n        },\n        blockSubmit: true\n      },\n      max: {\n        name: \"max\",\n        init: function init($this, name) {\n          return {\n            max: $this.data(\"validation\" + name + \"Max\")\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return parseFloat(value, 10) > parseFloat(validator.max, 10) && !validator.negative || parseFloat(value, 10) <= parseFloat(validator.max, 10) && validator.negative;\n        }\n      },\n      min: {\n        name: \"min\",\n        init: function init($this, name) {\n          return {\n            min: $this.data(\"validation\" + name + \"Min\")\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return parseFloat(value) < parseFloat(validator.min) && !validator.negative || parseFloat(value) >= parseFloat(validator.min) && validator.negative;\n        }\n      },\n      maxlength: {\n        name: \"maxlength\",\n        init: function init($this, name) {\n          return {\n            maxlength: $this.data(\"validation\" + name + \"Maxlength\")\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return value.length > validator.maxlength && !validator.negative || value.length <= validator.maxlength && validator.negative;\n        }\n      },\n      minlength: {\n        name: \"minlength\",\n        init: function init($this, name) {\n          return {\n            minlength: $this.data(\"validation\" + name + \"Minlength\")\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return value.length < validator.minlength && !validator.negative || value.length >= validator.minlength && validator.negative;\n        }\n      },\n      maxchecked: {\n        name: \"maxchecked\",\n        init: function init($this, name) {\n          var elements = $this.parents(\"form\").first().find(\"[name=\\\"\" + $this.attr(\"name\") + \"\\\"]\");\n          elements.bind(\"click.validation\", function () {\n            $this.trigger(\"change.validation\", {\n              includeEmpty: true\n            });\n          });\n          return {\n            maxchecked: $this.data(\"validation\" + name + \"Maxchecked\"),\n            elements: elements\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return validator.elements.filter(\":checked\").length > validator.maxchecked && !validator.negative || validator.elements.filter(\":checked\").length <= validator.maxchecked && validator.negative;\n        },\n        blockSubmit: true\n      },\n      minchecked: {\n        name: \"minchecked\",\n        init: function init($this, name) {\n          var elements = $this.parents(\"form\").first().find(\"[name=\\\"\" + $this.attr(\"name\") + \"\\\"]\");\n          elements.bind(\"click.validation\", function () {\n            $this.trigger(\"change.validation\", {\n              includeEmpty: true\n            });\n          });\n          return {\n            minchecked: $this.data(\"validation\" + name + \"Minchecked\"),\n            elements: elements\n          };\n        },\n        validate: function validate($this, value, validator) {\n          return validator.elements.filter(\":checked\").length < validator.minchecked && !validator.negative || validator.elements.filter(\":checked\").length >= validator.minchecked && validator.negative;\n        },\n        blockSubmit: true\n      }\n    },\n    builtInValidators: {\n      email: {\n        name: \"Email\",\n        type: \"shortcut\",\n        shortcut: \"validemail\"\n      },\n      validemail: {\n        name: \"Validemail\",\n        type: \"regex\",\n        regex: \"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\\\.[A-Za-z]{2,4}\",\n        message: \"Not a valid email address<!-- data-validator-validemail-message to override -->\"\n      },\n      passwordagain: {\n        name: \"Passwordagain\",\n        type: \"match\",\n        match: \"password\",\n        message: \"Does not match the given password<!-- data-validator-paswordagain-message to override -->\"\n      },\n      positive: {\n        name: \"Positive\",\n        type: \"shortcut\",\n        shortcut: \"number,positivenumber\"\n      },\n      negative: {\n        name: \"Negative\",\n        type: \"shortcut\",\n        shortcut: \"number,negativenumber\"\n      },\n      number: {\n        name: \"Number\",\n        type: \"regex\",\n        regex: \"([+-]?\\\\\\d+(\\\\\\.\\\\\\d*)?([eE][+-]?[0-9]+)?)?\",\n        message: \"Must be a number<!-- data-validator-number-message to override -->\"\n      },\n      integer: {\n        name: \"Integer\",\n        type: \"regex\",\n        regex: \"[+-]?\\\\\\d+\",\n        message: \"No decimal places allowed<!-- data-validator-integer-message to override -->\"\n      },\n      positivenumber: {\n        name: \"Positivenumber\",\n        type: \"min\",\n        min: 0,\n        message: \"Must be a positive number<!-- data-validator-positivenumber-message to override -->\"\n      },\n      negativenumber: {\n        name: \"Negativenumber\",\n        type: \"max\",\n        max: 0,\n        message: \"Must be a negative number<!-- data-validator-negativenumber-message to override -->\"\n      },\n      required: {\n        name: \"Required\",\n        type: \"required\",\n        message: \"This is required<!-- data-validator-required-message to override -->\"\n      },\n      checkone: {\n        name: \"Checkone\",\n        type: \"minchecked\",\n        minchecked: 1,\n        message: \"Check at least one option<!-- data-validation-checkone-message to override -->\"\n      }\n    }\n  };\n\n  var formatValidatorName = function formatValidatorName(name) {\n    return name.toLowerCase().replace(/(^|\\s)([a-z])/g, function (m, p1, p2) {\n      return p1 + p2.toUpperCase();\n    });\n  };\n\n  var getValue = function getValue($this) {\n    // Extract the value we're talking about\n    var value = $this.val();\n    var type = $this.attr(\"type\");\n\n    if (type === \"checkbox\") {\n      value = $this.is(\":checked\") ? value : \"\";\n    }\n\n    if (type === \"radio\") {\n      value = $('input[name=\"' + $this.attr(\"name\") + '\"]:checked').length > 0 ? value : \"\";\n    }\n\n    return value;\n  };\n\n  function regexFromString(inputstring) {\n    return new RegExp(\"^\" + inputstring + \"$\");\n  }\n  /**\n   * Thanks to Jason Bunting via StackOverflow.com\n   *\n   * http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string#answer-359910\n   * Short link: http://tinyurl.com/executeFunctionByName\n   **/\n\n\n  function executeFunctionByName(functionName, context\n  /*, args*/\n  ) {\n    var args = Array.prototype.slice.call(arguments).splice(2);\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n\n    for (var i = 0; i < namespaces.length; i++) {\n      context = context[namespaces[i]];\n    }\n\n    return context[func].apply(this, args);\n  }\n\n  $.fn.jqBootstrapValidation = function (method) {\n    if (defaults.methods[method]) {\n      return defaults.methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (_typeof(method) === 'object' || !method) {\n      return defaults.methods.init.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.jqBootstrapValidation');\n      return null;\n    }\n  };\n\n  $.jqBootstrapValidation = function (options) {\n    $(\":input\").not(\"[type=image],[type=submit]\").jqBootstrapValidation.apply(this, arguments);\n  };\n})(jQuery);",{"version":3,"sources":["/home/macluckie/projetperso/sf4VueJs/frontBlog/blog front v2/src/assets/js/jqBootstrapValidation.js"],"names":["$","createdElements","defaults","options","prependExistingHelpBlock","sniffHtml","preventSubmit","submitError","submitSuccess","semanticallyStrict","autoAdd","helpBlocks","filter","methods","init","settings","extend","$siblingElements","uniqueForms","unique","map","parents","toArray","bind","e","$form","warningsFound","$inputs","find","not","trigger","each","i","el","$this","$controlGroup","first","hasClass","removeClass","addClass","preventDefault","isFunction","jqBootstrapValidation","$helpBlock","validatorNames","length","append","push","message","attr","undefined","data","max","min","builtInValidators","required","toLowerCase","number","split","parts","replace","validatorNamesToInspect","newValidatorNamesToInspect","formatValidatorName","i2","el2","validator","type","shortcut","validators","hasOverrideMessage","foundValidator","validatorTypes","validatorType","validatorTemplate","name","validatorTemplateType","error","html","event","params","value","getValue","errorsFound","validatorTypeArray","includeEmpty","blockSubmit","submitting","validate","triggerHandler","join","oldCount","j","original","sort","destroy","unbind","indexOf","remove","collectErrors","errorMessages","$el","errors","hasErrors","concat","override","newDefaults","callback","validatorName","lastValue","val","lastValid","lastFinished","rrjqbvValidator","rrjqbvThis","executeFunctionByName","window","valid","setTimeout","ajax","url","dataType","success","failure","regex","regexFromString","test","negative","match","element","parseFloat","maxlength","minlength","maxchecked","elements","minchecked","email","validemail","passwordagain","positive","integer","positivenumber","negativenumber","checkone","m","p1","p2","toUpperCase","is","inputstring","RegExp","functionName","context","args","Array","prototype","slice","call","arguments","splice","namespaces","func","pop","apply","fn","method","jQuery"],"mappings":"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","sourcesContent":["/* jqBootstrapValidation\n * A plugin for automating validation on Twitter Bootstrap formatted forms.\n *\n * v1.3.6\n *\n * License: MIT <http://opensource.org/licenses/mit-license.php> - see LICENSE file\n *\n * http://ReactiveRaven.github.com/jqBootstrapValidation/\n */\n\n(function($) {\n\n  var createdElements = [];\n\n  var defaults = {\n    options: {\n      prependExistingHelpBlock: false,\n      sniffHtml: true, // sniff for 'required', 'maxlength', etc\n      preventSubmit: true, // stop the form submit event from firing if validation fails\n      submitError: false, // function called if there is an error when trying to submit\n      submitSuccess: false, // function called just before a successful submit event is sent to the server\n      semanticallyStrict: false, // set to true to tidy up generated HTML output\n      autoAdd: {\n        helpBlocks: true\n      },\n      filter: function() {\n        // return $(this).is(\":visible\"); // only validate elements you can see\n        return true; // validate everything\n      }\n    },\n    methods: {\n      init: function(options) {\n\n        var settings = $.extend(true, {}, defaults);\n\n        settings.options = $.extend(true, settings.options, options);\n\n        var $siblingElements = this;\n\n        var uniqueForms = $.unique(\n          $siblingElements.map(function() {\n            return $(this).parents(\"form\")[0];\n          }).toArray()\n        );\n\n        $(uniqueForms).bind(\"submit\", function(e) {\n          var $form = $(this);\n          var warningsFound = 0;\n          var $inputs = $form.find(\"input,textarea,select\").not(\"[type=submit],[type=image]\").filter(settings.options.filter);\n          $inputs.trigger(\"submit.validation\").trigger(\"validationLostFocus.validation\");\n\n          $inputs.each(function(i, el) {\n            var $this = $(el),\n              $controlGroup = $this.parents(\".form-group\").first();\n            if (\n              $controlGroup.hasClass(\"warning\")\n            ) {\n              $controlGroup.removeClass(\"warning\").addClass(\"error\");\n              warningsFound++;\n            }\n          });\n\n          $inputs.trigger(\"validationLostFocus.validation\");\n\n          if (warningsFound) {\n            if (settings.options.preventSubmit) {\n              e.preventDefault();\n            }\n            $form.addClass(\"error\");\n            if ($.isFunction(settings.options.submitError)) {\n              settings.options.submitError($form, e, $inputs.jqBootstrapValidation(\"collectErrors\", true));\n            }\n          } else {\n            $form.removeClass(\"error\");\n            if ($.isFunction(settings.options.submitSuccess)) {\n              settings.options.submitSuccess($form, e);\n            }\n          }\n        });\n\n        return this.each(function() {\n\n          // Get references to everything we're interested in\n          var $this = $(this),\n            $controlGroup = $this.parents(\".form-group\").first(),\n            $helpBlock = $controlGroup.find(\".help-block\").first(),\n            $form = $this.parents(\"form\").first(),\n            validatorNames = [];\n\n          // create message container if not exists\n          if (!$helpBlock.length && settings.options.autoAdd && settings.options.autoAdd.helpBlocks) {\n            $helpBlock = $('<div class=\"help-block\" />');\n            $controlGroup.find('.controls').append($helpBlock);\n            createdElements.push($helpBlock[0]);\n          }\n\n          // =============================================================\n          //                                     SNIFF HTML FOR VALIDATORS\n          // =============================================================\n\n          // *snort sniff snuffle*\n\n          if (settings.options.sniffHtml) {\n            var message = \"\";\n            // ---------------------------------------------------------\n            //                                                   PATTERN\n            // ---------------------------------------------------------\n            if ($this.attr(\"pattern\") !== undefined) {\n              message = \"Not in the expected format<!-- data-validation-pattern-message to override -->\";\n              if ($this.data(\"validationPatternMessage\")) {\n                message = $this.data(\"validationPatternMessage\");\n              }\n              $this.data(\"validationPatternMessage\", message);\n              $this.data(\"validationPatternRegex\", $this.attr(\"pattern\"));\n            }\n            // ---------------------------------------------------------\n            //                                                       MAX\n            // ---------------------------------------------------------\n            if ($this.attr(\"max\") !== undefined || $this.attr(\"aria-valuemax\") !== undefined) {\n              var max = ($this.attr(\"max\") !== undefined ? $this.attr(\"max\") : $this.attr(\"aria-valuemax\"));\n              message = \"Too high: Maximum of '\" + max + \"'<!-- data-validation-max-message to override -->\";\n              if ($this.data(\"validationMaxMessage\")) {\n                message = $this.data(\"validationMaxMessage\");\n              }\n              $this.data(\"validationMaxMessage\", message);\n              $this.data(\"validationMaxMax\", max);\n            }\n            // ---------------------------------------------------------\n            //                                                       MIN\n            // ---------------------------------------------------------\n            if ($this.attr(\"min\") !== undefined || $this.attr(\"aria-valuemin\") !== undefined) {\n              var min = ($this.attr(\"min\") !== undefined ? $this.attr(\"min\") : $this.attr(\"aria-valuemin\"));\n              message = \"Too low: Minimum of '\" + min + \"'<!-- data-validation-min-message to override -->\";\n              if ($this.data(\"validationMinMessage\")) {\n                message = $this.data(\"validationMinMessage\");\n              }\n              $this.data(\"validationMinMessage\", message);\n              $this.data(\"validationMinMin\", min);\n            }\n            // ---------------------------------------------------------\n            //                                                 MAXLENGTH\n            // ---------------------------------------------------------\n            if ($this.attr(\"maxlength\") !== undefined) {\n              message = \"Too long: Maximum of '\" + $this.attr(\"maxlength\") + \"' characters<!-- data-validation-maxlength-message to override -->\";\n              if ($this.data(\"validationMaxlengthMessage\")) {\n                message = $this.data(\"validationMaxlengthMessage\");\n              }\n              $this.data(\"validationMaxlengthMessage\", message);\n              $this.data(\"validationMaxlengthMaxlength\", $this.attr(\"maxlength\"));\n            }\n            // ---------------------------------------------------------\n            //                                                 MINLENGTH\n            // ---------------------------------------------------------\n            if ($this.attr(\"minlength\") !== undefined) {\n              message = \"Too short: Minimum of '\" + $this.attr(\"minlength\") + \"' characters<!-- data-validation-minlength-message to override -->\";\n              if ($this.data(\"validationMinlengthMessage\")) {\n                message = $this.data(\"validationMinlengthMessage\");\n              }\n              $this.data(\"validationMinlengthMessage\", message);\n              $this.data(\"validationMinlengthMinlength\", $this.attr(\"minlength\"));\n            }\n            // ---------------------------------------------------------\n            //                                                  REQUIRED\n            // ---------------------------------------------------------\n            if ($this.attr(\"required\") !== undefined || $this.attr(\"aria-required\") !== undefined) {\n              message = settings.builtInValidators.required.message;\n              if ($this.data(\"validationRequiredMessage\")) {\n                message = $this.data(\"validationRequiredMessage\");\n              }\n              $this.data(\"validationRequiredMessage\", message);\n            }\n            // ---------------------------------------------------------\n            //                                                    NUMBER\n            // ---------------------------------------------------------\n            if ($this.attr(\"type\") !== undefined && $this.attr(\"type\").toLowerCase() === \"number\") {\n              message = settings.builtInValidators.number.message;\n              if ($this.data(\"validationNumberMessage\")) {\n                message = $this.data(\"validationNumberMessage\");\n              }\n              $this.data(\"validationNumberMessage\", message);\n            }\n            // ---------------------------------------------------------\n            //                                                     EMAIL\n            // ---------------------------------------------------------\n            if ($this.attr(\"type\") !== undefined && $this.attr(\"type\").toLowerCase() === \"email\") {\n              message = \"Not a valid email address<!-- data-validator-validemail-message to override -->\";\n              if ($this.data(\"validationValidemailMessage\")) {\n                message = $this.data(\"validationValidemailMessage\");\n              } else if ($this.data(\"validationEmailMessage\")) {\n                message = $this.data(\"validationEmailMessage\");\n              }\n              $this.data(\"validationValidemailMessage\", message);\n            }\n            // ---------------------------------------------------------\n            //                                                MINCHECKED\n            // ---------------------------------------------------------\n            if ($this.attr(\"minchecked\") !== undefined) {\n              message = \"Not enough options checked; Minimum of '\" + $this.attr(\"minchecked\") + \"' required<!-- data-validation-minchecked-message to override -->\";\n              if ($this.data(\"validationMincheckedMessage\")) {\n                message = $this.data(\"validationMincheckedMessage\");\n              }\n              $this.data(\"validationMincheckedMessage\", message);\n              $this.data(\"validationMincheckedMinchecked\", $this.attr(\"minchecked\"));\n            }\n            // ---------------------------------------------------------\n            //                                                MAXCHECKED\n            // ---------------------------------------------------------\n            if ($this.attr(\"maxchecked\") !== undefined) {\n              message = \"Too many options checked; Maximum of '\" + $this.attr(\"maxchecked\") + \"' required<!-- data-validation-maxchecked-message to override -->\";\n              if ($this.data(\"validationMaxcheckedMessage\")) {\n                message = $this.data(\"validationMaxcheckedMessage\");\n              }\n              $this.data(\"validationMaxcheckedMessage\", message);\n              $this.data(\"validationMaxcheckedMaxchecked\", $this.attr(\"maxchecked\"));\n            }\n          }\n\n          // =============================================================\n          //                                       COLLECT VALIDATOR NAMES\n          // =============================================================\n\n          // Get named validators\n          if ($this.data(\"validation\") !== undefined) {\n            validatorNames = $this.data(\"validation\").split(\",\");\n          }\n\n          // Get extra ones defined on the element's data attributes\n          $.each($this.data(), function(i, el) {\n            var parts = i.replace(/([A-Z])/g, \",$1\").split(\",\");\n            if (parts[0] === \"validation\" && parts[1]) {\n              validatorNames.push(parts[1]);\n            }\n          });\n\n          // =============================================================\n          //                                     NORMALISE VALIDATOR NAMES\n          // =============================================================\n\n          var validatorNamesToInspect = validatorNames;\n          var newValidatorNamesToInspect = [];\n\n          do // repeatedly expand 'shortcut' validators into their real validators\n          {\n            // Uppercase only the first letter of each name\n            $.each(validatorNames, function(i, el) {\n              validatorNames[i] = formatValidatorName(el);\n            });\n\n            // Remove duplicate validator names\n            validatorNames = $.unique(validatorNames);\n\n            // Pull out the new validator names from each shortcut\n            newValidatorNamesToInspect = [];\n            $.each(validatorNamesToInspect, function(i, el) {\n              if ($this.data(\"validation\" + el + \"Shortcut\") !== undefined) {\n                // Are these custom validators?\n                // Pull them out!\n                $.each($this.data(\"validation\" + el + \"Shortcut\").split(\",\"), function(i2, el2) {\n                  newValidatorNamesToInspect.push(el2);\n                });\n              } else if (settings.builtInValidators[el.toLowerCase()]) {\n                // Is this a recognised built-in?\n                // Pull it out!\n                var validator = settings.builtInValidators[el.toLowerCase()];\n                if (validator.type.toLowerCase() === \"shortcut\") {\n                  $.each(validator.shortcut.split(\",\"), function(i, el) {\n                    el = formatValidatorName(el);\n                    newValidatorNamesToInspect.push(el);\n                    validatorNames.push(el);\n                  });\n                }\n              }\n            });\n\n            validatorNamesToInspect = newValidatorNamesToInspect;\n\n          } while (validatorNamesToInspect.length > 0)\n\n          // =============================================================\n          //                                       SET UP VALIDATOR ARRAYS\n          // =============================================================\n\n          var validators = {};\n\n          $.each(validatorNames, function(i, el) {\n            // Set up the 'override' message\n            var message = $this.data(\"validation\" + el + \"Message\");\n            var hasOverrideMessage = (message !== undefined);\n            var foundValidator = false;\n            message =\n              (\n                message ?\n                message :\n                \"'\" + el + \"' validation failed <!-- Add attribute 'data-validation-\" + el.toLowerCase() + \"-message' to input to change this message -->\"\n              );\n\n            $.each(\n              settings.validatorTypes,\n              function(validatorType, validatorTemplate) {\n                if (validators[validatorType] === undefined) {\n                  validators[validatorType] = [];\n                }\n                if (!foundValidator && $this.data(\"validation\" + el + formatValidatorName(validatorTemplate.name)) !== undefined) {\n                  validators[validatorType].push(\n                    $.extend(\n                      true, {\n                        name: formatValidatorName(validatorTemplate.name),\n                        message: message\n                      },\n                      validatorTemplate.init($this, el)\n                    )\n                  );\n                  foundValidator = true;\n                }\n              }\n            );\n\n            if (!foundValidator && settings.builtInValidators[el.toLowerCase()]) {\n\n              var validator = $.extend(true, {}, settings.builtInValidators[el.toLowerCase()]);\n              if (hasOverrideMessage) {\n                validator.message = message;\n              }\n              var validatorType = validator.type.toLowerCase();\n\n              if (validatorType === \"shortcut\") {\n                foundValidator = true;\n              } else {\n                $.each(\n                  settings.validatorTypes,\n                  function(validatorTemplateType, validatorTemplate) {\n                    if (validators[validatorTemplateType] === undefined) {\n                      validators[validatorTemplateType] = [];\n                    }\n                    if (!foundValidator && validatorType === validatorTemplateType.toLowerCase()) {\n                      $this.data(\"validation\" + el + formatValidatorName(validatorTemplate.name), validator[validatorTemplate.name.toLowerCase()]);\n                      validators[validatorType].push(\n                        $.extend(\n                          validator,\n                          validatorTemplate.init($this, el)\n                        )\n                      );\n                      foundValidator = true;\n                    }\n                  }\n                );\n              }\n            }\n\n            if (!foundValidator) {\n              $.error(\"Cannot find validation info for '\" + el + \"'\");\n            }\n          });\n\n          // =============================================================\n          //                                         STORE FALLBACK VALUES\n          // =============================================================\n\n          $helpBlock.data(\n            \"original-contents\",\n            (\n              $helpBlock.data(\"original-contents\") ?\n              $helpBlock.data(\"original-contents\") :\n              $helpBlock.html()\n            )\n          );\n\n          $helpBlock.data(\n            \"original-role\",\n            (\n              $helpBlock.data(\"original-role\") ?\n              $helpBlock.data(\"original-role\") :\n              $helpBlock.attr(\"role\")\n            )\n          );\n\n          $controlGroup.data(\n            \"original-classes\",\n            (\n              $controlGroup.data(\"original-clases\") ?\n              $controlGroup.data(\"original-classes\") :\n              $controlGroup.attr(\"class\")\n            )\n          );\n\n          $this.data(\n            \"original-aria-invalid\",\n            (\n              $this.data(\"original-aria-invalid\") ?\n              $this.data(\"original-aria-invalid\") :\n              $this.attr(\"aria-invalid\")\n            )\n          );\n\n          // =============================================================\n          //                                                    VALIDATION\n          // =============================================================\n\n          $this.bind(\n            \"validation.validation\",\n            function(event, params) {\n\n              var value = getValue($this);\n\n              // Get a list of the errors to apply\n              var errorsFound = [];\n\n              $.each(validators, function(validatorType, validatorTypeArray) {\n                if (value || value.length || (params && params.includeEmpty) || (!!settings.validatorTypes[validatorType].blockSubmit && params && !!params.submitting)) {\n                  $.each(validatorTypeArray, function(i, validator) {\n                    if (settings.validatorTypes[validatorType].validate($this, value, validator)) {\n                      errorsFound.push(validator.message);\n                    }\n                  });\n                }\n              });\n\n              return errorsFound;\n            }\n          );\n\n          $this.bind(\n            \"getValidators.validation\",\n            function() {\n              return validators;\n            }\n          );\n\n          // =============================================================\n          //                                             WATCH FOR CHANGES\n          // =============================================================\n          $this.bind(\n            \"submit.validation\",\n            function() {\n              return $this.triggerHandler(\"change.validation\", {\n                submitting: true\n              });\n            }\n          );\n          $this.bind(\n            [\n              \"keyup\",\n              \"focus\",\n              \"blur\",\n              \"click\",\n              \"keydown\",\n              \"keypress\",\n              \"change\"\n            ].join(\".validation \") + \".validation\",\n            function(e, params) {\n\n              var value = getValue($this);\n\n              var errorsFound = [];\n\n              $controlGroup.find(\"input,textarea,select\").each(function(i, el) {\n                var oldCount = errorsFound.length;\n                $.each($(el).triggerHandler(\"validation.validation\", params), function(j, message) {\n                  errorsFound.push(message);\n                });\n                if (errorsFound.length > oldCount) {\n                  $(el).attr(\"aria-invalid\", \"true\");\n                } else {\n                  var original = $this.data(\"original-aria-invalid\");\n                  $(el).attr(\"aria-invalid\", (original !== undefined ? original : false));\n                }\n              });\n\n              $form.find(\"input,select,textarea\").not($this).not(\"[name=\\\"\" + $this.attr(\"name\") + \"\\\"]\").trigger(\"validationLostFocus.validation\");\n\n              errorsFound = $.unique(errorsFound.sort());\n\n              // Were there any errors?\n              if (errorsFound.length) {\n                // Better flag it up as a warning.\n                $controlGroup.removeClass(\"success error\").addClass(\"warning\");\n\n                // How many errors did we find?\n                if (settings.options.semanticallyStrict && errorsFound.length === 1) {\n                  // Only one? Being strict? Just output it.\n                  $helpBlock.html(errorsFound[0] +\n                    (settings.options.prependExistingHelpBlock ? $helpBlock.data(\"original-contents\") : \"\"));\n                } else {\n                  // Multiple? Being sloppy? Glue them together into an UL.\n                  $helpBlock.html(\"<ul role=\\\"alert\\\"><li>\" + errorsFound.join(\"</li><li>\") + \"</li></ul>\" +\n                    (settings.options.prependExistingHelpBlock ? $helpBlock.data(\"original-contents\") : \"\"));\n                }\n              } else {\n                $controlGroup.removeClass(\"warning error success\");\n                if (value.length > 0) {\n                  $controlGroup.addClass(\"success\");\n                }\n                $helpBlock.html($helpBlock.data(\"original-contents\"));\n              }\n\n              if (e.type === \"blur\") {\n                $controlGroup.removeClass(\"success\");\n              }\n            }\n          );\n          $this.bind(\"validationLostFocus.validation\", function() {\n            $controlGroup.removeClass(\"success\");\n          });\n        });\n      },\n      destroy: function() {\n\n        return this.each(\n          function() {\n\n            var\n              $this = $(this),\n              $controlGroup = $this.parents(\".form-group\").first(),\n              $helpBlock = $controlGroup.find(\".help-block\").first();\n\n            // remove our events\n            $this.unbind('.validation'); // events are namespaced.\n            // reset help text\n            $helpBlock.html($helpBlock.data(\"original-contents\"));\n            // reset classes\n            $controlGroup.attr(\"class\", $controlGroup.data(\"original-classes\"));\n            // reset aria\n            $this.attr(\"aria-invalid\", $this.data(\"original-aria-invalid\"));\n            // reset role\n            $helpBlock.attr(\"role\", $this.data(\"original-role\"));\n            // remove all elements we created\n            if (createdElements.indexOf($helpBlock[0]) > -1) {\n              $helpBlock.remove();\n            }\n\n          }\n        );\n\n      },\n      collectErrors: function(includeEmpty) {\n\n        var errorMessages = {};\n        this.each(function(i, el) {\n          var $el = $(el);\n          var name = $el.attr(\"name\");\n          var errors = $el.triggerHandler(\"validation.validation\", {\n            includeEmpty: true\n          });\n          errorMessages[name] = $.extend(true, errors, errorMessages[name]);\n        });\n\n        $.each(errorMessages, function(i, el) {\n          if (el.length === 0) {\n            delete errorMessages[i];\n          }\n        });\n\n        return errorMessages;\n\n      },\n      hasErrors: function() {\n\n        var errorMessages = [];\n\n        this.each(function(i, el) {\n          errorMessages = errorMessages.concat(\n            $(el).triggerHandler(\"getValidators.validation\") ? $(el).triggerHandler(\"validation.validation\", {\n              submitting: true\n            }) : []\n          );\n        });\n\n        return (errorMessages.length > 0);\n      },\n      override: function(newDefaults) {\n        defaults = $.extend(true, defaults, newDefaults);\n      }\n    },\n    validatorTypes: {\n      callback: {\n        name: \"callback\",\n        init: function($this, name) {\n          return {\n            validatorName: name,\n            callback: $this.data(\"validation\" + name + \"Callback\"),\n            lastValue: $this.val(),\n            lastValid: true,\n            lastFinished: true\n          };\n        },\n        validate: function($this, value, validator) {\n          if (validator.lastValue === value && validator.lastFinished) {\n            return !validator.lastValid;\n          }\n\n          if (validator.lastFinished === true) {\n            validator.lastValue = value;\n            validator.lastValid = true;\n            validator.lastFinished = false;\n\n            var rrjqbvValidator = validator;\n            var rrjqbvThis = $this;\n            executeFunctionByName(\n              validator.callback,\n              window,\n              $this,\n              value,\n              function(data) {\n                if (rrjqbvValidator.lastValue === data.value) {\n                  rrjqbvValidator.lastValid = data.valid;\n                  if (data.message) {\n                    rrjqbvValidator.message = data.message;\n                  }\n                  rrjqbvValidator.lastFinished = true;\n                  rrjqbvThis.data(\"validation\" + rrjqbvValidator.validatorName + \"Message\", rrjqbvValidator.message);\n                  // Timeout is set to avoid problems with the events being considered 'already fired'\n                  setTimeout(function() {\n                    rrjqbvThis.trigger(\"change.validation\");\n                  }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst\n                }\n              }\n            );\n          }\n\n          return false;\n\n        }\n      },\n      ajax: {\n        name: \"ajax\",\n        init: function($this, name) {\n          return {\n            validatorName: name,\n            url: $this.data(\"validation\" + name + \"Ajax\"),\n            lastValue: $this.val(),\n            lastValid: true,\n            lastFinished: true\n          };\n        },\n        validate: function($this, value, validator) {\n          if (\"\" + validator.lastValue === \"\" + value && validator.lastFinished === true) {\n            return validator.lastValid === false;\n          }\n\n          if (validator.lastFinished === true) {\n            validator.lastValue = value;\n            validator.lastValid = true;\n            validator.lastFinished = false;\n            $.ajax({\n              url: validator.url,\n              data: \"value=\" + value + \"&field=\" + $this.attr(\"name\"),\n              dataType: \"json\",\n              success: function(data) {\n                if (\"\" + validator.lastValue === \"\" + data.value) {\n                  validator.lastValid = !!(data.valid);\n                  if (data.message) {\n                    validator.message = data.message;\n                  }\n                  validator.lastFinished = true;\n                  $this.data(\"validation\" + validator.validatorName + \"Message\", validator.message);\n                  // Timeout is set to avoid problems with the events being considered 'already fired'\n                  setTimeout(function() {\n                    $this.trigger(\"change.validation\");\n                  }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst\n                }\n              },\n              failure: function() {\n                validator.lastValid = true;\n                validator.message = \"ajax call failed\";\n                validator.lastFinished = true;\n                $this.data(\"validation\" + validator.validatorName + \"Message\", validator.message);\n                // Timeout is set to avoid problems with the events being considered 'already fired'\n                setTimeout(function() {\n                  $this.trigger(\"change.validation\");\n                }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst\n              }\n            });\n          }\n\n          return false;\n\n        }\n      },\n      regex: {\n        name: \"regex\",\n        init: function($this, name) {\n          return {\n            regex: regexFromString($this.data(\"validation\" + name + \"Regex\"))\n          };\n        },\n        validate: function($this, value, validator) {\n          return (!validator.regex.test(value) && !validator.negative) ||\n            (validator.regex.test(value) && validator.negative);\n        }\n      },\n      required: {\n        name: \"required\",\n        init: function($this, name) {\n          return {};\n        },\n        validate: function($this, value, validator) {\n          return !!(value.length === 0 && !validator.negative) ||\n            !!(value.length > 0 && validator.negative);\n        },\n        blockSubmit: true\n      },\n      match: {\n        name: \"match\",\n        init: function($this, name) {\n          var element = $this.parents(\"form\").first().find(\"[name=\\\"\" + $this.data(\"validation\" + name + \"Match\") + \"\\\"]\").first();\n          element.bind(\"validation.validation\", function() {\n            $this.trigger(\"change.validation\", {\n              submitting: true\n            });\n          });\n          return {\n            \"element\": element\n          };\n        },\n        validate: function($this, value, validator) {\n          return (value !== validator.element.val() && !validator.negative) ||\n            (value === validator.element.val() && validator.negative);\n        },\n        blockSubmit: true\n      },\n      max: {\n        name: \"max\",\n        init: function($this, name) {\n          return {\n            max: $this.data(\"validation\" + name + \"Max\")\n          };\n        },\n        validate: function($this, value, validator) {\n          return (parseFloat(value, 10) > parseFloat(validator.max, 10) && !validator.negative) ||\n            (parseFloat(value, 10) <= parseFloat(validator.max, 10) && validator.negative);\n        }\n      },\n      min: {\n        name: \"min\",\n        init: function($this, name) {\n          return {\n            min: $this.data(\"validation\" + name + \"Min\")\n          };\n        },\n        validate: function($this, value, validator) {\n          return (parseFloat(value) < parseFloat(validator.min) && !validator.negative) ||\n            (parseFloat(value) >= parseFloat(validator.min) && validator.negative);\n        }\n      },\n      maxlength: {\n        name: \"maxlength\",\n        init: function($this, name) {\n          return {\n            maxlength: $this.data(\"validation\" + name + \"Maxlength\")\n          };\n        },\n        validate: function($this, value, validator) {\n          return ((value.length > validator.maxlength) && !validator.negative) ||\n            ((value.length <= validator.maxlength) && validator.negative);\n        }\n      },\n      minlength: {\n        name: \"minlength\",\n        init: function($this, name) {\n          return {\n            minlength: $this.data(\"validation\" + name + \"Minlength\")\n          };\n        },\n        validate: function($this, value, validator) {\n          return ((value.length < validator.minlength) && !validator.negative) ||\n            ((value.length >= validator.minlength) && validator.negative);\n        }\n      },\n      maxchecked: {\n        name: \"maxchecked\",\n        init: function($this, name) {\n          var elements = $this.parents(\"form\").first().find(\"[name=\\\"\" + $this.attr(\"name\") + \"\\\"]\");\n          elements.bind(\"click.validation\", function() {\n            $this.trigger(\"change.validation\", {\n              includeEmpty: true\n            });\n          });\n          return {\n            maxchecked: $this.data(\"validation\" + name + \"Maxchecked\"),\n            elements: elements\n          };\n        },\n        validate: function($this, value, validator) {\n          return (validator.elements.filter(\":checked\").length > validator.maxchecked && !validator.negative) ||\n            (validator.elements.filter(\":checked\").length <= validator.maxchecked && validator.negative);\n        },\n        blockSubmit: true\n      },\n      minchecked: {\n        name: \"minchecked\",\n        init: function($this, name) {\n          var elements = $this.parents(\"form\").first().find(\"[name=\\\"\" + $this.attr(\"name\") + \"\\\"]\");\n          elements.bind(\"click.validation\", function() {\n            $this.trigger(\"change.validation\", {\n              includeEmpty: true\n            });\n          });\n          return {\n            minchecked: $this.data(\"validation\" + name + \"Minchecked\"),\n            elements: elements\n          };\n        },\n        validate: function($this, value, validator) {\n          return (validator.elements.filter(\":checked\").length < validator.minchecked && !validator.negative) ||\n            (validator.elements.filter(\":checked\").length >= validator.minchecked && validator.negative);\n        },\n        blockSubmit: true\n      }\n    },\n    builtInValidators: {\n      email: {\n        name: \"Email\",\n        type: \"shortcut\",\n        shortcut: \"validemail\"\n      },\n      validemail: {\n        name: \"Validemail\",\n        type: \"regex\",\n        regex: \"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\\\.[A-Za-z]{2,4}\",\n        message: \"Not a valid email address<!-- data-validator-validemail-message to override -->\"\n      },\n      passwordagain: {\n        name: \"Passwordagain\",\n        type: \"match\",\n        match: \"password\",\n        message: \"Does not match the given password<!-- data-validator-paswordagain-message to override -->\"\n      },\n      positive: {\n        name: \"Positive\",\n        type: \"shortcut\",\n        shortcut: \"number,positivenumber\"\n      },\n      negative: {\n        name: \"Negative\",\n        type: \"shortcut\",\n        shortcut: \"number,negativenumber\"\n      },\n      number: {\n        name: \"Number\",\n        type: \"regex\",\n        regex: \"([+-]?\\\\\\d+(\\\\\\.\\\\\\d*)?([eE][+-]?[0-9]+)?)?\",\n        message: \"Must be a number<!-- data-validator-number-message to override -->\"\n      },\n      integer: {\n        name: \"Integer\",\n        type: \"regex\",\n        regex: \"[+-]?\\\\\\d+\",\n        message: \"No decimal places allowed<!-- data-validator-integer-message to override -->\"\n      },\n      positivenumber: {\n        name: \"Positivenumber\",\n        type: \"min\",\n        min: 0,\n        message: \"Must be a positive number<!-- data-validator-positivenumber-message to override -->\"\n      },\n      negativenumber: {\n        name: \"Negativenumber\",\n        type: \"max\",\n        max: 0,\n        message: \"Must be a negative number<!-- data-validator-negativenumber-message to override -->\"\n      },\n      required: {\n        name: \"Required\",\n        type: \"required\",\n        message: \"This is required<!-- data-validator-required-message to override -->\"\n      },\n      checkone: {\n        name: \"Checkone\",\n        type: \"minchecked\",\n        minchecked: 1,\n        message: \"Check at least one option<!-- data-validation-checkone-message to override -->\"\n      }\n    }\n  };\n\n  var formatValidatorName = function(name) {\n    return name\n      .toLowerCase()\n      .replace(\n        /(^|\\s)([a-z])/g,\n        function(m, p1, p2) {\n          return p1 + p2.toUpperCase();\n        }\n      );\n  };\n\n  var getValue = function($this) {\n    // Extract the value we're talking about\n    var value = $this.val();\n    var type = $this.attr(\"type\");\n    if (type === \"checkbox\") {\n      value = ($this.is(\":checked\") ? value : \"\");\n    }\n    if (type === \"radio\") {\n      value = ($('input[name=\"' + $this.attr(\"name\") + '\"]:checked').length > 0 ? value : \"\");\n    }\n    return value;\n  };\n\n  function regexFromString(inputstring) {\n    return new RegExp(\"^\" + inputstring + \"$\");\n  }\n\n  /**\n   * Thanks to Jason Bunting via StackOverflow.com\n   *\n   * http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string#answer-359910\n   * Short link: http://tinyurl.com/executeFunctionByName\n   **/\n  function executeFunctionByName(functionName, context /*, args*/ ) {\n    var args = Array.prototype.slice.call(arguments).splice(2);\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n    for (var i = 0; i < namespaces.length; i++) {\n      context = context[namespaces[i]];\n    }\n    return context[func].apply(this, args);\n  }\n\n  $.fn.jqBootstrapValidation = function(method) {\n\n    if (defaults.methods[method]) {\n      return defaults.methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === 'object' || !method) {\n      return defaults.methods.init.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.jqBootstrapValidation');\n      return null;\n    }\n\n  };\n\n  $.jqBootstrapValidation = function(options) {\n    $(\":input\").not(\"[type=image],[type=submit]\").jqBootstrapValidation.apply(this, arguments);\n  };\n\n})(jQuery);\n"]}]}